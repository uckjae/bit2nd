package lee;

import java.io.*;
import java.util.Stack;

/*

문제

정수를 저장하는 스택을 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.

명령은 총 다섯 가지이다.

    push X: 정수 X를 스택에 넣는 연산이다.
    pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.
    size: 스택에 들어있는 정수의 개수를 출력한다.
    empty: 스택이 비어있으면 1, 아니면 0을 출력한다.
    top: 스택의 가장 위에 있는 정수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.

입력

첫째 줄에 주어지는 명령의 수 N (1 ≤ N ≤ 10,000)이 주어진다. 둘째 줄부터 N개의 줄에는 명령이 하나씩 주어진다.
주어지는 정수는 1보다 크거나 같고, 100,000보다 작거나 같다. 문제에 나와있지 않은 명령이 주어지는 경우는 없다.
출력

출력해야하는 명령이 주어질 때마다, 한 줄에 하나씩 출력한다.
예제 입력 1

14      2
push 1  2
push 2  0
top     2
size    1
empty   1
pop     -1
pop     0
pop     1
size    -1
empty   0
pop 3
push 3
empty
top


 */
public class Main_lee {
    public static Stack<Integer> mystack = new Stack();
    public static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    public static void stack(String method) throws IOException {
        int input = 0;
        if(method.split(" ").length==2){
            input = Integer.parseInt(method.split(" ")[1]);
            method = method.split(" ")[0];
        }

        if(method.equals("push")){
            mystack.push(input);
        }else if(method.equals("pop")){
            if(!mystack.isEmpty()){
                //System.out.println(mystack.pop());
                bw.write(mystack.pop()+"\n");
            }else{
                //System.out.println(-1);
                bw.write(-1+"\n");
            }
        }else if(method.equals("size")){
            //System.out.println(mystack.size());
            bw.write(mystack.size()+"\n");
        }else if(method.equals("empty")){
            int bool =(mystack.isEmpty())?1:0;
            //System.out.println(bool);
            bw.write(bool+"\n");
        }else if(method.equals("top")){
            if(!mystack.isEmpty()){
                //System.out.println(mystack.peek());
                bw.write(mystack.peek()+"\n");
            }else{
                //System.out.println(-1);
                bw.write(-1+"\n");
            }
        }
        bw.flush();
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        for(int i=0; i<n;i++){
            String method = br.readLine();
            stack(method);

        }
        bw.close();
        br.close();
    }
}
